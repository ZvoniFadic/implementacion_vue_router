{"remainingRequest":"/Users/zvonimir/Desktop/Bootcamp/e-camp/M4_desarrollo _con_vue_js/4_vue_router/dia_2/desafío_implementación_de_vue_router/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zvonimir/Desktop/Bootcamp/e-camp/M4_desarrollo _con_vue_js/4_vue_router/dia_2/desafío_implementación_de_vue_router/src/components/Articulo.vue?vue&type=template&id=0da5a0ea&scoped=true&","dependencies":[{"path":"/Users/zvonimir/Desktop/Bootcamp/e-camp/M4_desarrollo _con_vue_js/4_vue_router/dia_2/desafío_implementación_de_vue_router/src/components/Articulo.vue","mtime":1628817759742},{"path":"/Users/zvonimir/Desktop/Bootcamp/e-camp/M4_desarrollo _con_vue_js/4_vue_router/dia_2/desafío_implementación_de_vue_router/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zvonimir/Desktop/Bootcamp/e-camp/M4_desarrollo _con_vue_js/4_vue_router/dia_2/desafío_implementación_de_vue_router/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/zvonimir/Desktop/Bootcamp/e-camp/M4_desarrollo _con_vue_js/4_vue_router/dia_2/desafío_implementación_de_vue_router/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zvonimir/Desktop/Bootcamp/e-camp/M4_desarrollo _con_vue_js/4_vue_router/dia_2/desafío_implementación_de_vue_router/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cgo8ZGl2PgogICAgCiAgPGhlYWRlcgogICAgY2xhc3M9Im1hc3RoZWFkIgogICAgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgnL2Fzc2V0cy9pbWcvY2hldnJvbGV0LWJsYXplci5qcGcnKSI+CiAgICA8ZGl2IGNsYXNzPSJvdmVybGF5Ij48L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTEwIGNvbC1sZy04IG14LWF1dG8iPgogICAgICAgICAgPGRpdiBjbGFzcz0icG9zdC1oZWFkaW5nIj4KICAgICAgICAgICAgPGgxPgogICAgICAgICAgICAgIDxzdHJvbmc+Q2hldnJvbGV0IHByZXNlbnRhIGxhIHRvdGFsbWVudGUgbnVldmEgQmxhemVyPC9zdHJvbmc+CiAgICAgICAgICAgIDwvaDE+CiAgICAgICAgICAgIDxoMiBjbGFzcz0ic3ViaGVhZGluZyI+CiAgICAgICAgICAgICAgPHN0cm9uZz5MbGVnYSBjb21vIGxhIHByaW1lcmEgU1VWIGRlcG9ydGl2YSBkZSBsYSBtYXJjYTwvc3Ryb25nPgogICAgICAgICAgICA8L2gyPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9oZWFkZXI+CiAgPGFydGljbGU+CiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMCBjb2wtbGctOCBteC1hdXRvIj4KICAgICAgICAgIDxwPgogICAgICAgICAgICBMYSBtYXJjYSBkZWwgY29yYmF0w61uIGhhIGVzdGFkbyBtdXkgYWN0aXZhIGRlIG5vdmVkYWRlcyBlc3RlIDIwMTksCiAgICAgICAgICAgIHkgYWNhYmEgZGUgcHJlc2VudGFyIGVuIENoaWxlIHN1IHByaW1lciBTVVYgZGVwb3J0aXZvLCBxdWUgcmVjb2JyYQogICAgICAgICAgICB1biBjb25vY2lkbyBub21icmUgZGUgbGEgbWFyY2EsIGxhIEJsYXplciwgcXVlIGFob3JhIGxsZWdhIGNvbgogICAgICAgICAgICBtdWNoYSBtw6FzIGNlcmNhbsOtYSBhbCBkaXNlw7FvIHkgY29uY2VwdG8gZGVsIENhbWFybyBxdWUgZWwgZGVsIHRvZG8KICAgICAgICAgICAgdGVycmVubyBydWRvIHF1ZSBmdWUgaGFjZSBhw7FvcyBhdHLDoXMuCiAgICAgICAgICA8L3A+CiAgICAgICAgICA8cD4KICAgICAgICAgICAgQXRlcnJpemEgZW4gbnVlc3RybyBwYcOtcyBlbiBkb3MgdmVyc2lvbmVzLCBhbWJhcyBtdXkgZXF1aXBhZGFzIHkKICAgICAgICAgICAgcXVlIHNvbGFtZW50ZSB2YXLDrWFuIGVuIHN1IGxvb2ssIG8gbcOhcyBkZXBvcnRpdm8gbyBtw6FzCiAgICAgICAgICAgIGVsZWdhbnRlLiZuYnNwO0xhIHByaW1lcmEgZXMgbGEgUlMsIHF1ZSBvZnJlY2UgZGV0YWxsZXMgZGVwb3J0aXZvcwogICAgICAgICAgICBlbiBuZWdybyBicmlsbGFudGUsIGluY2x1eWVuZG8gZWwgdHJhZGljaW9uYWwgY29yYmF0w61uLCBtaWVudHJhcwogICAgICAgICAgICBxdWUgbGEgdmVyc2nDs24gUHJlbWllciBvZnJlY2UgdW4gbG9vayBtw6FzIGVsZWdhbnRlLCBjb24gbXVjaG9zCiAgICAgICAgICAgIGRldGFsbGVzIGNyb21hZG9zIHkgcXVlIHJlY3VlcmRhIG3DoXMgYSBvdHJvcyBtb2RlbG9zIGRlIGxhIG1hcmNhLgogICAgICAgICAgICBBbWJhcyBzZSBvZnJlY2VuIGEgdW4gcHJlY2lvIGRlIGxhbnphbWllbnRvIGRlICQyOS45OTAuMDAwLAogICAgICAgICAgICBpbmNsdXllbmRvIGJvbm9zIGRlIGxhbnphbWllbnRvIHkgZGUgZmluYW5jaWFtaWVudG8gKHByZWNpbyBzaW4KICAgICAgICAgICAgYm9ub3MgZXMgJDMxLjk5MC4wMDApLgogICAgICAgICAgPC9wPgogICAgICAgICAgPGgyIGNsYXNzPSJzZWN0aW9uLWhlYWRpbmciPjxzdHJvbmc+RElTRcORTyBERVBPUlRJVk88L3N0cm9uZz48L2gyPgogICAgICAgICAgPHA+CiAgICAgICAgICAgIExvIHByaW1lcm8gcXVlIHNlIGFwcmVjaWEgZXMgc3UgZGlzZcOxbyBleHRlcmlvciwgcXVlIGF1bnF1ZSBlbiB1bgogICAgICAgICAgICB0YW1hw7FvIG5vIG1lbm9yIGRlIGNhc2kgNC45IG1ldHJvcywgc2UgdmUgYmFzdGFudGUgYXRyYWN0aXZvIHkKICAgICAgICAgICAgZWxlZ2FudGUsIGNvbiB1biBmcm9udGFsIG11eSBhZmlsYWRvLCBjb24gdW5hIGJvY2EgbXV5IGdyYW5kZSwKICAgICAgICAgICAgbHVjZXMgZGl1cm5hcyBMRUQgc3VwZXJpb3JlcyB5IHByaW5jaXBhbGVzIGFiYWpvIEhJRCBjb24KICAgICAgICAgICAgdGVjbm9sb2fDrWEgSW50ZWxsaWJlYW0uIEVsIGxhdGVyYWwgc2UgdmUgbXV5IGVzdGlsaXphZG8sIGNvbiBzdXMKICAgICAgICAgICAgbGxhbnRhcyBkZSAyMSBwdWxnYWRhcywgeSB1bmEgcGFydGUgdHJhc2VyYSBxdWUgcmVjdWVyZGEgYSBvdHJvcwogICAgICAgICAgICBtb2RlbG9zIGVtYmxlbcOhdGljb3MgZGVsIHNlZ21lbnRvLCBjb21vIGxhIE5pc3NhbiBNdXJhbm8gbyBMZXh1cwogICAgICAgICAgICBSWC4gTGEgdHJhc2VyYSBvZnJlY2UgdW4gcG9ydGFsw7NuIGNvbiB1bmEgYnVlbmEgY2HDrWRhLCBkb2JsZQogICAgICAgICAgICBzYWxpZGEgZGUgZXNjYXBlIHkgaGVybW9zYXMgbHVjZXMgTEVEIGNvbiB1biBtaW5pIGxvZ28gZGUgbGEKICAgICAgICAgICAgbWFyY2EuCiAgICAgICAgICA8L3A+CiAgICAgICAgICA8cD4KICAgICAgICAgICAgRWwgaW50ZXJpb3IgZXMgZG9uZGUgbcOhcyBzZSBhc2VtZWphIGEgc3UgaGVybWFubyBkZXBvcnRpdm8gQ2FtYXJvLAogICAgICAgICAgICBjb24gdW4gdGFibGVybyBkZXBvcnRpdm8geSByZWFsbWVudGUgbXV5IGVxdWlwYWRvLCBjb24gZGV0YWxsZXMKICAgICAgICAgICAgY29tbyBsYXMgc2FsaWRhcyBkZSBhaXJlIGNpcmN1bGFyZXMsIHBhbnRhbGxhIGNlbnRyYWwgZW4gdGFibGVybwogICAgICAgICAgICBkZSBpbnN0cnVtZW50b3MsJm5ic3A7dm9sYW50ZSBkZXBvcnRpdm8sIHNpc3RlbWEgbXVsdGltZWRpYSBjb24KICAgICAgICAgICAgTXlMaW5rIGNvbiBBbmRyb2lkIEF1dG8geSBBcHBsZSBDYXJwbGF5LCBjYXJnYWRvciBpbmhhbMOhbWJyaWNvLAogICAgICAgICAgICBtaWVudHJhcyBxdWUgc2Vnw7puIHN1IHZlcnNpw7NuLCBsb3MgYXNpZW50b3MgZXN0w6FuIHRhcGl6YWRvcyBlbgogICAgICAgICAgICBjdWVybyBuZWdybyBwZXJmb3JhZG8gZW4gbGEgdmVyc2nDs24gUHJlbWllciBtaWVudHJhcyBxdWUgZW4gbGEKICAgICAgICAgICAgdmVyc2nDs24gUlMgZWwgdGFwaXogY29uIGluc2VyY2lvbmVzIGRlIG1pY3JvIGZpYnJhIGdhbXV6YWRhIHkKICAgICAgICAgICAgZGV0YWxsZXMgcm9qb3MgZW4gdG9kbyBlbCBpbnRlcmlvci4KICAgICAgICAgIDwvcD4KICAgICAgICAgIDxibG9ja3F1b3RlIGNsYXNzPSJibG9ja3F1b3RlIj4KICAgICAgICAgICAgPHAgY2xhc3M9Im1iLTAiPjwvcD4KICAgICAgICAgIDwvYmxvY2txdW90ZT4KICAgICAgICAgIDxwPgogICAgICAgICAgICBTdSBlcXVpcGFtaWVudG8gZGUgc2VndXJpZGFkIGVzIHJlYWxtZW50ZSBjb21wbGV0bywgb2ZyZWNpZW5kbwogICAgICAgICAgICBkZXNkZSBsb3Mgc2lldGUgYWlyYmFncywgY29udHJvbCBkZSBlc3RhYmlsaWRhZCwgZnJlbm9zIGRlIGRpc2NvCiAgICAgICAgICAgIGVuIGxhcyBjdWF0cm8gcnVlZGFzLCBjb250cm9sIGNydWNlcm8gYWRhcHRhdGl2bywgYWxlcnRhIGRlIGNhbWJpbwogICAgICAgICAgICBkZSBjYXJyaWwsIGFsZXJ0YSBkZSB0csOhZmljbyBjcnV6YWRvLCBhbGVydGEgZGUgY29saXNpw7NuIGZyb250YWwsCiAgICAgICAgICAgIGFzaXN0ZW50ZSBkZSBmcmVuYWRvIGEgYmFqYXMgdmVsb2NpZGFkZXMsIGFsZXJ0YSBlbiBlbCBhc2llbnRvIGRlbAogICAgICAgICAgICBjb25kdWN0b3IsIGFzaXN0ZW50ZSBhY3Rpdm8gZGUgZXN0YWNpb25hbWllbnRvIHkgY8OhbWFyYSBkZSAzNjDCsC4KICAgICAgICAgIDwvcD4KICAgICAgICAgIDxwPgogICAgICAgICAgICBFbCBtb3RvciBkZSBhbWJhcyB2ZXJzaW9uZXMgZXMgdW4gVjYgZGUgMy42IGxpdHJvcyBxdWUgZW50cmVnYSB1bmEKICAgICAgICAgICAgcG90ZW5jaWEgZGUgMzA4IEhwIHkgMzY1IE5tLCBxdWUgc2UgYWNvcGxhIGEgdW5hIGNhamEgYXV0b23DoXRpY2EKICAgICAgICAgICAgZGUgbnVldmUgdmVsb2NpZGFkZXMsIHRyYW5zbWl0aWVuZG8gYWwgc3VlbG8gZXN0YSBwb3RlbmNpYSBncmFjaWFzCiAgICAgICAgICAgIGEgdW4gc2lzdGVtYSBBV0QgY29uIGRpZmVyZW50ZXMgbW9kb3MgZGUgbWFuZWpvLiBQYXJhIG1lam9yYXIgYWxnbwogICAgICAgICAgICBsYSBlZmljaWVuY2lhLCBpbnRlZ3JhIHVuIHNpc3RlbWEgZGUgZW5jZW5kaWRvIHkgYXBhZ2FkbyBkZSBtb3RvcgogICAgICAgICAgICBhdXRvbcOhdGljbyBTdGFydCZhbXA7U3RvcC4KICAgICAgICAgIDwvcD4KICAgICAgICAgIDxhIGhyZWY9IiMiPjwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2FydGljbGU+CiAgPGZvb3Rlcj4KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTEwIGNvbC1sZy04IG14LWF1dG8iPgogICAgICAgICAgPHVsIGNsYXNzPSJsaXN0LWlubGluZSB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibGlzdC1pbmxpbmUtaXRlbSI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZhLXN0YWNrIGZhLWxnIgogICAgICAgICAgICAgICAgPjxpIGNsYXNzPSJmYSBmYS1jaXJjbGUgZmEtc3RhY2stMngiPjwvaQogICAgICAgICAgICAgICAgPjxpIGNsYXNzPSJmYSBmYS10d2l0dGVyIGZhLXN0YWNrLTF4IGZhLWludmVyc2UiPjwvaQogICAgICAgICAgICAgID48L3NwYW4+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibGlzdC1pbmxpbmUtaXRlbSI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZhLXN0YWNrIGZhLWxnIgogICAgICAgICAgICAgICAgPjxpIGNsYXNzPSJmYSBmYS1jaXJjbGUgZmEtc3RhY2stMngiPjwvaQogICAgICAgICAgICAgICAgPjxpIGNsYXNzPSJmYSBmYS1mYWNlYm9vayBmYS1zdGFjay0xeCBmYS1pbnZlcnNlIj48L2kKICAgICAgICAgICAgICA+PC9zcGFuPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9Imxpc3QtaW5saW5lLWl0ZW0iPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmYS1zdGFjayBmYS1sZyIKICAgICAgICAgICAgICAgID48aSBjbGFzcz0iZmEgZmEtY2lyY2xlIGZhLXN0YWNrLTJ4Ij48L2kKICAgICAgICAgICAgICAgID48aSBjbGFzcz0iZmEgZmEtZ2l0aHViIGZhLXN0YWNrLTF4IGZhLWludmVyc2UiPjwvaQogICAgICAgICAgICAgID48L3NwYW4+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICA8L3VsPgogICAgICAgICAgPHAgY2xhc3M9InRleHQtbXV0ZWQgY29weXJpZ2h0Ij5Db3B5cmlnaHQmbmJzcDvCqSZuYnNwO1Y4IC0gMjAxODwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Zvb3Rlcj4KCjwvZGl2PgoK"},null]}